# This file is generated by script 'ferrite/ci/gitlab/generate.py'

image: agerasev/debian-psc

variables:
  GIT_SUBMODULE_STRATEGY: "recursive"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

cache: &global_cache
  - key:
      files:
        - pyproject.toml
    paths:
      - poetry.lock
      - .venv/

stages:
  - "-1"
  - "0"
  - "1"
  - "2"
  - "3"

yapf:
  stage: "-1"
  script:
    - poetry install
    - poetry run yapf --diff --recursive ferrite
  allow_failure: true

mypy:
  stage: "-1"
  script:
    - poetry install
    - poetry run mypy -p ferrite
  allow_failure: true

host.core_test.build:
  stage: "0"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.core_test.build
  artifacts:
    paths:
      - target/core_test

host.codegen.generate:
  stage: "0"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.codegen.generate
  artifacts:
    paths:
      - target/codegen

host.app_test.build:
  stage: "0"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.app_test.build
  artifacts:
    paths:
      - target/app_test

imx8mn.app_toolchain.download:
  stage: "0"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture imx8mn.app_toolchain.download
  artifacts:
    paths:
      - target/toolchain_gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu
  cache:
    - *global_cache
    - key: "imx8mn.app_toolchain.download:f93a1603"
      paths:
        - target/toolchain_gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu

host.core_test.run:
  stage: "1"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.core_test.run
  needs:
    - host.core_test.build

host.codegen.build:
  stage: "1"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.codegen.build
  needs:
    - host.codegen.generate
  artifacts:
    paths:
      - target/codegen_test

host.app_test.run:
  stage: "1"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.app_test.run
  needs:
    - host.app_test.build

imx8mn.app.build:
  stage: "1"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture imx8mn.app.build
  needs:
    - imx8mn.app_toolchain.download
  artifacts:
    paths:
      - target/app

host.codegen.test:
  stage: "2"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.codegen.test
  needs:
    - host.codegen.build

imx8mn.all.build:
  stage: "2"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture imx8mn.all.build
  needs:
    - imx8mn.app.build

host.all.test:
  stage: "3"
  script:
    - poetry install
    - poetry run python -u -m ferrite.manage --no-deps --no-capture host.all.test
  needs:
    - host.app_test.run
    - host.codegen.test
    - host.core_test.run
